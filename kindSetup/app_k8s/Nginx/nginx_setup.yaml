# -------------------------------
# Nginx
# -------------------------------
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-dep
  namespace: url-shortener
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx-dep-pod
  template:
    metadata:
      labels:
        app: nginx-dep-pod
    spec:
      containers:
      - name: nginx
        image: nginx:1.29.1
        ports:
        - containerPort: 80
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/conf.d
        - name: tls-certs
          mountPath: /etc/nginx/certs
          readOnly: true
        resources:
              requests:
                memory: "64Mi"
                cpu: "250m"
              limits:
                memory: "128Mi"
                cpu: "500m"
      volumes:
      - name: nginx-config
        configMap:
          name: custom-nginx-config
      - name: tls-certs
        secret:
          secretName: selfsigned-cert
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: custom-nginx-config
  namespace: url-shortener
data:
  default.conf: |
    server {
    listen 80;
    listen [::]:80;
    server_name _;

    location /prometheus {
      proxy_pass http://prometheus-svc:9090/prometheus;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      }

    location /grafana {
      proxy_pass http://grafana-svc:3000;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      }
    }

    server {
    listen 443 ssl;
    server_name url-shortener;

    ssl_certificate     /etc/nginx/certs/tls.crt;
    ssl_certificate_key /etc/nginx/certs/tls.key;

    location / {
      proxy_pass http://client-svc:5000/;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      }
    }

---
apiVersion: v1
kind: Service
metadata:
  name: nginx-svc
  namespace: url-shortener
spec:
  type: NodePort
  selector:
    app: nginx-dep-pod
  ports:
    - name: http-proxy
      protocol: TCP
      port: 80
      targetPort: 80
    - name: https-proxy
      protocol: TCP
      port: 443
      targetPort: 443